files
*.gz
raw
*.pth
.pytest_cache

.vscode
*.exe
*.exe.stackdump
*.o
*.zip
*.gz
*.tar
a.out
*.bak
bak
node_modules
db
# mac
.DS_Store
# pyenv
env
# ipynb
.ipynb_checkpoints
# deepLearning model
*.ckpt
*.pt
model
models
# deepLearning data
data
.data
processed
raw
node_modules
__pycache__
# Book build output
_book

# eBook build output
*.epub
*.mobi
*.pdf

*.zip
*.rar
*.tar
*.gz
*.mp3
# video
*.mp4
*.avi
# 濾掉沒有副檔名的檔案。
# 參考 https://stackoverflow.com/questions/19023550/how-do-i-add-files-without-dots-in-them-all-extension-less-files-to-the-gitign
*
!/**/
!*.*

!Makefile
!README
!LICENSE
!AUTHORS
!TODO

bak
*.bak

# qemu
iso
*.iso

# python
__pycache__
*.pyd

# deno

.deno_plugins

# rust
*.pdb
target

# conan

build

# dart
.dart_tool
.packages
pubspec.lock

# cmake
CMakeFiles
CMakeCache.txt

# 涵蓋度報表
cov/  

# postgresql
pgdata/

.vscode

*.exe
*.exe.stackdump
*.hack
# *.bin
*.o
*.zip
a.out
*.a
*.elf

.nyc_output

package-lock.json

# Logs
logs
*.log

# pdf
# *.pdf


# exe
*.exe

# bak
*.bak
bak

# node 
node_modules


# database
db

# mac
.DS_Store

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git
node_modules

# rust
*.pdb
target

# c -- conon
bin

*.gz
*.tar

# pyenv
env

# ipynb
.ipynb_checkpoints
# deepLearning model
*.ckpt
model
models
# deepLearning data
data
.data
processed
raw

# Node rules:
## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt
*.bak
bak

## Dependency directory
## Commenting this out is preferred by some people, see
## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git
node_modules
__pycache__

# Book build output
_book

# eBook build output
# *.epub
# *.mobi
# *.pdf

*.zip
*.rar
*.tar
*.gz
*.mp3
# video
*.mp4
*.avi
*.pt

# mac
.DS_Store

# image
*.bmp
*.ppm

